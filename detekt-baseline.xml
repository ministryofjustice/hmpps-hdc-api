<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ConstructorParameterNaming:PrisonOffenderEventListener.kt$HMPPSEventType$val Type: String</ID>
    <ID>ConstructorParameterNaming:PrisonOffenderEventListener.kt$HMPPSEventType$val Value: String</ID>
    <ID>ConstructorParameterNaming:PrisonOffenderEventListener.kt$HMPPSMessage$val Message: String</ID>
    <ID>ConstructorParameterNaming:PrisonOffenderEventListener.kt$HMPPSMessage$val MessageAttributes: HMPPSMessageAttributes</ID>
    <ID>CyclomaticComplexMethod:ToModelTransformers.kt$fun transformToModelCurfewTimes( curfewHours: EntityCurfewTimes?, ): List&lt;ModelCurfewTimes&gt;</ID>
    <ID>LongParameterList:Licence.kt$Licence$( @Id @NotNull @GeneratedValue(strategy = GenerationType.IDENTITY) @Column(name = "id", nullable = false) val id: Long? = null, var prisonNumber: String?, val bookingId: Long, val stage: String, val version: Int, val transitionDate: LocalDateTime, val varyVersion: Int, val additionalConditionsVersion: Int?, val standardConditionsVersion: Int?, var deletedAt: LocalDateTime?, var licenceInCvl: Boolean, @Type(JsonBinaryType::class) @Column(columnDefinition = "jsonb") val licence: LicenceData?, )</ID>
    <ID>LongParameterList:LicenceVersion.kt$LicenceVersion$( @Id @NotNull @GeneratedValue(strategy = GenerationType.IDENTITY) @Column(name = "id", nullable = false) val id: Long? = null, var prisonNumber: String?, val bookingId: Long, val timestamp: LocalDateTime, val version: Int, val template: String, val varyVersion: Int, var deletedAt: LocalDateTime?, var licenceInCvl: Boolean, @Type(JsonBinaryType::class) @Column(columnDefinition = "jsonb") val licence: LicenceData?, )</ID>
    <ID>MagicNumber:SoftDeleteMigrationsController.kt$SoftDeleteMigrationsController$1000</ID>
    <ID>SpreadOperator:HmppsHdcApi.kt$(*args)</ID>
  </CurrentIssues>
</SmellBaseline>
